package com.edgedo.sys.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import com.alibaba.fastjson.JSON;
import com.edgedo.common.base.BaseController;
import com.edgedo.common.base.annotation.Pass;
import com.edgedo.common.sequrity.CheckPermission;
import com.edgedo.common.shiro.JwtRsaSecKey;
import com.edgedo.common.shiro.User;
import com.edgedo.common.util.CallBackInterface;
import com.edgedo.common.util.JWTUtil;
import com.edgedo.common.util.MD5;
import com.edgedo.common.util.RSAUtil;
import com.edgedo.sys.entity.*;
import com.edgedo.sys.queryvo.*;
import com.edgedo.sys.service.*;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("/admin/sysUser")
public class SysUserController extends BaseController {
	@Autowired
		JwtRsaSecKey secKey;
	@Autowired
	private SysUserService service;

	/**
	 * 根据登录用户初始化主页
	 *
	 * @return
	 */
	@RequestMapping("/loadCurrUser")
	public ModelAndView loadCurrUser(HttpServletRequest request){

		ModelAndView modelAndView = new ModelAndView();
		try {
			User shiroUser = getLoginUser();
			return buildResponse(modelAndView,shiroUser);
		} catch (Exception e) {
			return buildErrorResponse(modelAndView,"获取用户信息错误");
		}
	}

	/**
	 * 分页查询
	 * @param query
	 * @return
	 */
	@RequestMapping("/listpage")
	public ModelAndView listpage(@ModelAttribute SysUserQuery query){
		ModelAndView modelAndView = new ModelAndView();
		service.listPage(query);
		buildResponse(modelAndView,query);
		return modelAndView;
	}


	/**
	 * 新增修改
	 * @param voObj
	 * @return
	 */
	@RequestMapping("/saveOrUpdate")
	public ModelAndView saveOrUpdate(SysUser voObj){
		ModelAndView modelAndView = new ModelAndView();
		String errMsg = "";
		String id = voObj.getId();
		if(id==null || id.trim().equals("")){
			errMsg = service.insert(voObj);
		}else{
			errMsg = service.update(voObj);
		}
		if(errMsg!=null && !errMsg.equals("")){
			buildErrorResponse(modelAndView, errMsg);
		}else{
			buildResponse(modelAndView);
		}
		return modelAndView;
	}

	/**
	 * 批量删除
	 * @param ids
	 * @return
	 */
	@RequestMapping("/deleteByIds")
	public ModelAndView delete(String ids){
		ModelAndView modelAndView = new ModelAndView();
		String[] arr = ids.split(",");
		List<String> list = new ArrayList<String>();
		for(String str : arr){
			list.add(str);
		}
		service.deleteByIds(list);
		return buildResponse(modelAndView);
	}


	/**
	 * 根据主键加载
	 * @param id
	 * @return
	 */
	@RequestMapping("/loadById")
	public ModelAndView  loadById(String id){
		ModelAndView modelAndView = new ModelAndView();
		return buildResponse(modelAndView, service.loadById(id));
	}

	/***
	 * 用户登录的方法
	 * @param userCode
	 * @param password
	 * @param session
	 * @param request
	 * @return
	 */
	@RequestMapping("/login")
	@ResponseBody
	@Pass
	public ModelAndView login(@RequestParam(required=true) String userCode,@RequestParam(required=true) String password, final HttpSession session,HttpServletRequest request){
		ModelAndView modelAndView = new ModelAndView();
		String errMsg = "";
		final SysUserView user = service.getAdminUserByCode(userCode);
		if(user==null){
			buildErrorResponse(modelAndView, "用户不存在！");
			return modelAndView;
		}
		String pwd = MD5.encode(MD5.encode(password)+user.getId());
		if(!pwd.equals(user.getUserPassword())){
			buildErrorResponse(modelAndView, "密码错误！");
			return modelAndView;
		}
		//修改用户登录态和本次登录时间
		final String[] token = new String[1];
		User shiroUser = new User();
		shiroUser.setUserId(user.getId());
		shiroUser.setUserName(user.getUserName());
		shiroUser.setDefaultRole(user.getUserRoleName());
		String userInfo = JSON.toJSONString(shiroUser);
		//将字符串使用RSA加密
		try {
			String userInfoRsa = RSAUtil.encode(userInfo,secKey);
			token[0] = JWTUtil.sign(userInfoRsa,secKey.getJwtSecretkey());
		} catch (Exception e) {
			e.printStackTrace();
		}
		//操作日志
		buildResponse(modelAndView,token[0]);
		return modelAndView;

	}


	/**
	 * 用户访问菜单数据
	 * @return
	 */
	@RequestMapping("/nav")
	public ModelAndView nav(){
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("tpl/blocks/nav");
		return modelAndView;
	}

	/**
	 * 退出
	 * @return
	 */
	@RequestMapping("/logout")
	@ResponseBody
	public ModelAndView logout(HttpSession session){
		ModelAndView modelAndView = new ModelAndView();
		SysUser user = null;//AdminUserLoginIntercepter.getCurrentUser();

		return buildResponse(modelAndView);
	}

}
